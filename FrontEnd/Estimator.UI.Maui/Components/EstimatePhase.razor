<div style="background-color:#eeeeee;padding:.2em;">
    <h5>Phase Details</h5>
    <div class="container">
        <div class="row">
            <div class="col-3" style="text-align:right;">Phase Name</div>
            <div class="col-9">
                <InputText style="width:99%;" @bind-Value="phase.Name"></InputText>
            </div>
        </div>
        <div class="row" style="margin-top:.2em;">
            <div class="col-3" style="text-align:right;">Description</div>
            <div class="col-9">
                <InputTextArea style="width:99%;" @bind-Value="phase.Description"></InputTextArea>
            </div>
        </div>
        <div class="row">
            <div class="col-3" style="text-align:right;">Phase Length In Weeks</div>
            <div class="col-3">
                <InputNumber style="width:4em;" @bind-Value="phase.LengthInWeeks"></InputNumber>
            </div>
        </div>
        <div class="row">
            <div class="col-9">
            </div>
            <div class="col-3">
                <span @onclick="SavePhase"><span class="oi oi-check" aria-hidden="true"></span> Save </span>
                <span @onclick="DeletePhase"><span class="oi oi-x" aria-hidden="true"></span> Delete</span>
            </div>
        </div>
    </div>
</div>
<ResourcesSelectedForPhase phase="@phase" />

@code {
    [Parameter]
    public Estimator.UI.Model.EstimatePhase phase { get; set; } 

    [Parameter]
    public EventCallback<Estimator.UI.Model.EstimatePhase> OnPhaseSaved { get; set; }

    [Parameter]
    public EventCallback<Estimator.UI.Model.EstimatePhase> OnPhaseDeleted { get; set; }


    private async Task SavePhase()
    {
        await OnPhaseSaved.InvokeAsync(phase);

    }

    private async Task DeletePhase()
    {
        
        await OnPhaseDeleted.InvokeAsync(phase);
    }
}